read.csv("Dataset R.csv", header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(car)
library(ggplot2)
library(curl)
f <- curl("https://raw.githubusercontent.com/dalarre/Time-Series-Analysis/main/Dataset_R_2.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
f <- curl("https://raw.githubusercontent.com/dalarre/Time-Series-Analysis/main/Dataset_R_2.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(d)
names(d)
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
ggplot(data = d, aes(x=d$Year.AD, y= d$Rb)) + geom_line()
# This is the pacf() function
# This stands for partial auto-correlation function which is used to find auto-correlation
# in the data
?pacf()
pacf1 <- pacf(d$Rb, main="PACF")
# As you can see, there is auto correlation present in the data.
# Next we will make a simple linear model of the data.
lm1 <- lm(d$Rb ~ d$Year.AD, data=d)
summary (lm1)
d$mod.resid <- residuals(lm1)
pacf2 <- pacf(d$mod.resid, main="PACF - Rb residuals")
pacf2
d$mod.resid <- residuals(lm1)
pacf2 <- pacf(d$mod.resid, main="PACF - Rb residuals")
pacf2
ar.1 <- arima(d$mod.resid, order=c(1,0,0))
ar.2 <- arima(d$mod.resid, order=c(2,0,0))
ar.3 <- arima(d$mod.resid, order=c(3,0,0))
ar.4 <- arima(d$mod.resid, order=c(4,0,0))
ar.5 <- arima(d$mod.resid, order=c(5,0,0))
# MA
ma.1 <- arima(d$mod.resid, order=c(0,0,1))
ma.2 <- arima(d$mod.resid, order=c(0,0,2))
ma.3 <- arima(d$mod.resid, order=c(0,0,3))
ma.4 <- arima(d$mod.resid, order=c(0,0,4))
ma.5 <- arima(d$mod.resid, order=c(0,0,5))
AICc(ar.1)
AICc(ar.1)
library(MuMIn)
ar.1 <- arima(d$mod.resid, order=c(1,0,0))
ar.2 <- arima(d$mod.resid, order=c(2,0,0))
ar.3 <- arima(d$mod.resid, order=c(3,0,0))
ar.4 <- arima(d$mod.resid, order=c(4,0,0))
ar.5 <- arima(d$mod.resid, order=c(5,0,0))
# MA
ma.1 <- arima(d$mod.resid, order=c(0,0,1))
ma.2 <- arima(d$mod.resid, order=c(0,0,2))
ma.3 <- arima(d$mod.resid, order=c(0,0,3))
ma.4 <- arima(d$mod.resid, order=c(0,0,4))
ma.5 <- arima(d$mod.resid, order=c(0,0,5))
AICc(ar.1)
AICc(ar.2)
AICc(ar.3)
AICc(ar.4)
AICc(ar.5)
AICc(ma.1)
AICc(ma.2)
AICc(ma.3)
AICc(ma.4)
AICc(ma.5)
gls.mod1 <- gls(Rb ~ Year.AD, data=d, correlation = corARMA(p=2, q=0))
gls.mod1 <- gls(Rb ~ Year.AD, data=d, correlation = corARMA(p=2, q=0))
library(nlme) # gls (generalized least squares)
gls.mod1 <- gls(Rb ~ Year.AD, data=d, correlation = corARMA(p=2, q=0))
gls.mod2 <- gls(Rb ~ Year.AD, data=d, correlation = corARMA(p=0, q=3))
AICc(gls.mod1)
AICc(gls.mod2)
summary(gls.mod1)
confint(gls.mod1)
d$new.residuals <- resid(gls.mod1, type="normalized")
pacf3 <- pacf(d$new.residuals, main="PACF - GLS model residuals")
knitr::opts_chunk$set(echo = TRUE)
library(nlme) # gls (generalized least squares)
library(MuMIn) #AICc
library(MASS)
library(ggplot2)
library(curl)
f <- curl("https://raw.githubusercontent.com/dalarre/Time-Series-Analysis/main/Dataset_R_2.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
f <- curl("https://raw.githubusercontent.com/dalarre/Time-Series-Analysis/main/Dataset_R_2.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(d)
knitr::opts_chunk$set(echo = TRUE)
# Loading libraries
library(nlme) # gls (generalized least squares)
library(MuMIn) #AICc
library(MASS)
library(ggplot2)
library(curl)
f <- curl("https://raw.githubusercontent.com/dalarre/Time-Series-Analysis/main/Dataset_R_2.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(d)
names(d)
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
ggplot(data = d, aes(x=d$Year.AD, y= d$Rb)) + geom_line()
# This is the pacf() function
# This stands for partial auto-correlation function which is used to find auto-correlation
# in the data
?pacf()
pacf1 <- pacf(d$Rb, main="PACF")
# As you can see, there is auto correlation present in the data.
# Next we will make a simple linear model of the data.
lm1 <- lm(d$Rb ~ d$Year.AD, data=d)
summary (lm1)
# After that, we will extract the residuals (error) from this model and see if this error is
# auto-correlated as well
d$mod.resid <- residuals(lm1)
pacf2 <- pacf(d$mod.resid, main="PACF - Rb residuals")
pacf2
# Residuals should be random. The values in this graph which are outside the confidence interval
# tell us that the residuals are not random. The goal of this analysis will be to correct for
# these non-random residuals.
# ARIMA stands for autoregressive intergrated moving average models
# The values p, d and q are different values which help describe the data we are trying to fit to the ARIMA model.
# In the ARIMA function in r ...
ar.1 <- arima(d$mod.resid, order=c(1,0,0))
ar.2 <- arima(d$mod.resid, order=c(2,0,0))
ar.3 <- arima(d$mod.resid, order=c(3,0,0))
ar.4 <- arima(d$mod.resid, order=c(4,0,0))
ar.5 <- arima(d$mod.resid, order=c(5,0,0))
# MA
ma.1 <- arima(d$mod.resid, order=c(0,0,1))
ma.2 <- arima(d$mod.resid, order=c(0,0,2))
ma.3 <- arima(d$mod.resid, order=c(0,0,3))
ma.4 <- arima(d$mod.resid, order=c(0,0,4))
ma.5 <- arima(d$mod.resid, order=c(0,0,5))
AICc(ar.1)
AICc(ar.2)
AICc(ar.3)
AICc(ar.4)
AICc(ar.5)
AICc(ma.1)
AICc(ma.2)
AICc(ma.3)
AICc(ma.4)
AICc(ma.5)
gls.mod1 <- gls(Rb ~ Year.AD, data=d, correlation = corARMA(p=2, q=0))
gls.mod2 <- gls(Rb ~ Year.AD, data=d, correlation = corARMA(p=0, q=3))
AICc(gls.mod1)
AICc(gls.mod2)
summary(gls.mod1)
confint(gls.mod1)
d$new.residuals <- resid(gls.mod1, type="normalized")
pacf3 <- pacf(d$new.residuals, main="PACF - GLS model residuals")
AICc(ar.1)
AICc(ar.2)
AICc(ar.3)
AICc(ar.4)
AICc(ar.5)
AICc(ma.1)
AICc(ma.2)
AICc(ma.3)
AICc(ma.4)
AICc(ma.5)
gls.mod1 <- gls(Rb ~ Year.AD, data=d, correlation = corARMA(p=2, q=0))
AICc(gls.mod1)
AICc(gls.mod2)
AICc(ar.1)
AICc(ar.2)
AICc(ar.3)
AICc(ar.4)
AICc(ar.5)
AICc(ma.1)
AICc(ma.2)
AICc(ma.3)
AICc(ma.4)
AICc(ma.5)
pacf3 <- pacf(d$new.residuals, main="PACF - GLS model residuals")
knitr::opts_chunk$set(echo = TRUE)
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
f <- curl("https://raw.githubusercontent.com/dalarre/Time-Series-Analysis/main/Dataset_R_2.csv")
library(nlme) # gls (generalized least squares)
library(MuMIn) #AICc
library(MASS) # acf(), pacf(), ARIMA()
library(ggplot2) # for graphing
library(curl) # for l
f <- curl("https://raw.githubusercontent.com/dalarre/Time-Series-Analysis/main/Dataset_R_2.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
f <- curl("https://raw.githubusercontent.com/dalarre/Time-Series-Analysis/main/Dataset_R_2.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(d)
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
plot(d$Rb ~ d$Year.AD, data=d, type="l", pch=16,
ylab="ppm", xlab="Year")
pacf1 <- pacf(d$Rb, main="PACF")
pacf1 <- pacf(d$Rb, main="PACF")
pacf1 <- pacf(d$Rb, main="PACF")
pacf1 <- pacf(d$Rb, main="PACF")
pacf1 <- pacf(d$Rb, main="PACF")
